{"ast":null,"code":"import _classCallCheck from\"/Users/phipson/Documents/GitProjects/phipson.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/phipson/Documents/GitProjects/phipson.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/phipson/Documents/GitProjects/phipson.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/phipson/Documents/GitProjects/phipson.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/phipson/Documents/GitProjects/phipson.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{HashRouter}from'react-router-dom';import React,{Component}from'react';import'../style.css';import $ from'jquery';import ProjectPreviewElement from'./ProjectPreviewElement';import SideCarousel from'./SideCarousel';import gsap from\"gsap\";import{ScrollToPlugin,ScrollTrigger}from'gsap/all';gsap.registerPlugin(ScrollToPlugin,ScrollTrigger);// Holds all the projects that will be displayed based on the pageID that we are currently at\nvar ProjectCatalogue=/*#__PURE__*/function(_Component){_inherits(ProjectCatalogue,_Component);var _super=_createSuper(ProjectCatalogue);function ProjectCatalogue(props){var _this;_classCallCheck(this,ProjectCatalogue);_this=_super.call(this,props);_this.state={scrollTopPosition:0,// Keep track of where we are in the screen so we can return to it if we hit back\nscrollChange:true// Updating SideCarousel based on scroll changes and not click changes\n};_this.handleScrollChange=_this.handleScrollChange.bind(_assertThisInitialized(_this));return _this;}// Add fade in fade out that are triggered by scroll for each element when the page is mounted onto the screen\n// The elements are fetched by class name using JQuery and are animated with GSAP\n_createClass(ProjectCatalogue,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;$(\".ProjectElementWrapper\").toArray().forEach(function(element,i){// Scroll animation to fade in the div element\ngsap.timeline({scrollTrigger:{trigger:element,start:\"50% bottom\",end:\"70% center\",//markers: true, // For debug only\nscrub:true,// Update the state of our SideCarousel object based on where we are scrolling\n// Use this.state.scrollChange to disable changes when scrolling occurs from clicking on sidecarousel\nonEnter:function onEnter(){if(_this2.child&&_this2.state.scrollChange)_this2.child.updateScrollState(i);},onEnterBack:function onEnterBack(){if(_this2.child&&_this2.state.scrollChange)_this2.child.updateScrollState(i);}}}).to($(element),{css:{opacity:1},duration:0.35,ease:\"Power2.easeInOut\"});// Scroll Animation to fade out the div element\ngsap.timeline({scrollTrigger:{trigger:element,start:\"60% center\",end:\"50% top\",//markers: true, // For debug only\nscrub:true}}).to($(element),{css:{opacity:0},duration:0.35,ease:\"Power2.easeInOut\"});});}// This sets a boolean that is used to disable any intermmediate changes to the side carousel white circles when we click on it\n// Ensures that scrolling feedback and clicking feedback are separate\n},{key:\"handleScrollChange\",value:function handleScrollChange(isClick){this.setState(function(){return{scrollChange:isClick};});}},{key:\"render\",value:function render(){var _this3=this;console.log(this.props.projectList);return/*#__PURE__*/_jsxs(\"div\",{className:\"ProjectCatalogueWrapper\",children:[/*#__PURE__*/_jsx(SideCarousel,{projectList:this.props.projectList,onRef:function onRef(ref){return _this3.child=ref;},handleScrollChange:this.handleScrollChange}),Object.values(this.props.projectList).map(function(proj,i){return/*#__PURE__*/_jsx(ProjectPreviewElement,{index:i,name:proj.name,desc:proj.desc,img:proj.img,page:proj.page,link:proj.link,pageID:_this3.props.pageID,viewDetails:_this3.props.viewDetails},i);})]});}}]);return ProjectCatalogue;}(Component);export{ProjectCatalogue as default};","map":{"version":3,"sources":["/Users/phipson/Documents/GitProjects/phipson.github.io/src/components/ProjectCatalogue.js"],"names":["HashRouter","React","Component","$","ProjectPreviewElement","SideCarousel","gsap","ScrollToPlugin","ScrollTrigger","registerPlugin","ProjectCatalogue","props","state","scrollTopPosition","scrollChange","handleScrollChange","bind","toArray","forEach","element","i","timeline","scrollTrigger","trigger","start","end","scrub","onEnter","child","updateScrollState","onEnterBack","to","css","opacity","duration","ease","isClick","setState","console","log","projectList","ref","Object","values","map","proj","name","desc","img","page","link","pageID","viewDetails"],"mappings":"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","sourcesContent":["import { HashRouter } from 'react-router-dom';\nimport React, {Component} from 'react';\nimport '../style.css';\nimport $ from 'jquery';\n\nimport ProjectPreviewElement from './ProjectPreviewElement';\nimport SideCarousel from './SideCarousel';\n\nimport gsap from \"gsap\";\nimport { ScrollToPlugin, ScrollTrigger } from 'gsap/all';\n\ngsap.registerPlugin(ScrollToPlugin, ScrollTrigger);\n\n// Holds all the projects that will be displayed based on the pageID that we are currently at\nexport default class ProjectCatalogue extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scrollTopPosition: 0, // Keep track of where we are in the screen so we can return to it if we hit back\n            scrollChange: true // Updating SideCarousel based on scroll changes and not click changes\n        }\n\n        this.handleScrollChange = this.handleScrollChange.bind(this);\n    }\n\n    // Add fade in fade out that are triggered by scroll for each element when the page is mounted onto the screen\n    // The elements are fetched by class name using JQuery and are animated with GSAP\n    componentDidMount() {\n        $(\".ProjectElementWrapper\").toArray().forEach((element, i) => {\n            // Scroll animation to fade in the div element\n            gsap.timeline({\n                scrollTrigger: {\n                    trigger: element,\n                    start: \"50% bottom\",\n                    end: \"70% center\",\n                    //markers: true, // For debug only\n                    scrub: true,\n\n                    // Update the state of our SideCarousel object based on where we are scrolling\n                    // Use this.state.scrollChange to disable changes when scrolling occurs from clicking on sidecarousel\n                    onEnter: () => {if (this.child && this.state.scrollChange) this.child.updateScrollState(i)},\n                    onEnterBack: () => {if (this.child && this.state.scrollChange) this.child.updateScrollState(i)}\n                }\n            })\n            .to($(element), {css: {opacity: 1}, duration: 0.35, ease: \"Power2.easeInOut\"});\n\n\n            // Scroll Animation to fade out the div element\n            gsap.timeline({\n                scrollTrigger: {\n                    trigger: element,\n                    start: \"60% center\",\n                    end: \"50% top\",\n                    //markers: true, // For debug only\n                    scrub: true,\n                }\n            })\n            .to($(element), {css: {opacity: 0}, duration: 0.35, ease: \"Power2.easeInOut\"});\n        })\n    }\n\n    // This sets a boolean that is used to disable any intermmediate changes to the side carousel white circles when we click on it\n    // Ensures that scrolling feedback and clicking feedback are separate\n    handleScrollChange(isClick) {\n        this.setState(() => ({\n            scrollChange: isClick\n        }));\n    }\n\n    render() {\n        console.log(this.props.projectList);\n\n        return(\n        <div className=\"ProjectCatalogueWrapper\">\n            <SideCarousel   projectList={this.props.projectList} \n                            onRef={(ref) => this.child = ref}\n                            handleScrollChange={this.handleScrollChange}/>\n            {Object.values(this.props.projectList).map((proj, i) => <ProjectPreviewElement \n                                                    key={i}\n                                                    index={i}\n                                                    name={proj.name} \n                                                    desc={proj.desc} \n                                                    img={proj.img} \n                                                    page={proj.page}\n                                                    link={proj.link}\n                                                    pageID={this.props.pageID}\n                                                    viewDetails={this.props.viewDetails}/>)}\n        </div>)\n    }\n}"]},"metadata":{},"sourceType":"module"}