{"ast":null,"code":"import $ from 'jquery';\nimport gsap from 'gsap';\nimport { TimelineLite, CSSPlugin } from 'gsap/all';\nconst plugins = [CSSPlugin];\ngsap.registerPlugin(plugins);\nexport function dissolveFlashIn(SVGGroup, duration, onFinish) {\n  console.log(\"Dissolving in...\");\n  let appearTL = new TimelineLite({\n    paused: true,\n    yoyo: true,\n    repeat: -1\n  });\n  SVGGroup.forEach(element => {\n    appearTL.add(gsap.to($(element), duration, {\n      css: {\n        opacity: $(element).data('og_opacity')\n      },\n      delay: 2,\n      onComplete: onFinish,\n      onCompleteParams: [element, 0.5, null]\n    }), 0);\n  });\n  return appearTL;\n}\nexport function dissolveFadeFromWhite(element, duration, onFinish) {\n  console.log(\"Fadeing from white...\");\n  gsap.to($(element), duration, {\n    css: {\n      fill: $(element).data('og_fill'),\n      stroke: $(element).data('og_stroke')\n    },\n    onComplete: onFinish,\n    onCompleteParams: [duration, null]\n  });\n}\nexport function setElementTransform(element, rotation, pivot = \"50% 50%\", translation = {\n  x: \"+=0\",\n  y: \"+=0\"\n}) {\n  gsap.set(element, {\n    rotation: rotation,\n    transformOrigin: pivot,\n    x: translation.x,\n    y: translation.y\n  });\n}","map":{"version":3,"sources":["/Users/phipson/Documents/GitProjects/phipson.github.io/webv5/src/SVGAnimatorUtility.js"],"names":["$","gsap","TimelineLite","CSSPlugin","plugins","registerPlugin","dissolveFlashIn","SVGGroup","duration","onFinish","console","log","appearTL","paused","yoyo","repeat","forEach","element","add","to","css","opacity","data","delay","onComplete","onCompleteParams","dissolveFadeFromWhite","fill","stroke","setElementTransform","rotation","pivot","translation","x","y","set","transformOrigin"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,UAAxC;AACA,MAAMC,OAAO,GAAG,CAAED,SAAF,CAAhB;AAEAF,IAAI,CAACI,cAAL,CAAoBD,OAApB;AAEA,OAAO,SAASE,eAAT,CAA0BC,QAA1B,EAAoCC,QAApC,EAA8CC,QAA9C,EAAwD;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,MAAIC,QAAQ,GAAG,IAAIV,YAAJ,CAAiB;AAAEW,IAAAA,MAAM,EAAC,IAAT;AAAeC,IAAAA,IAAI,EAAC,IAApB;AAA0BC,IAAAA,MAAM,EAAC,CAAC;AAAlC,GAAjB,CAAf;AACAR,EAAAA,QAAQ,CAACS,OAAT,CAAiBC,OAAO,IAAI;AACxBL,IAAAA,QAAQ,CAACM,GAAT,CAAajB,IAAI,CAACkB,EAAL,CAAQnB,CAAC,CAACiB,OAAD,CAAT,EAAoBT,QAApB,EAA8B;AAACY,MAAAA,GAAG,EAAE;AAACC,QAAAA,OAAO,EAAErB,CAAC,CAACiB,OAAD,CAAD,CAAWK,IAAX,CAAgB,YAAhB;AAAV,OAAN;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,UAAU,EAAEf,QAFD;AAGXgB,MAAAA,gBAAgB,EAAE,CAACR,OAAD,EAAU,GAAV,EAAe,IAAf;AAHP,KAA9B,CAAb,EAG0E,CAH1E;AAIH,GALD;AAOA,SAAOL,QAAP;AACH;AAED,OAAO,SAASc,qBAAT,CAA+BT,OAA/B,EAAwCT,QAAxC,EAAkDC,QAAlD,EAA4D;AAC/DC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAV,EAAAA,IAAI,CAACkB,EAAL,CAAQnB,CAAC,CAACiB,OAAD,CAAT,EAAoBT,QAApB,EAA8B;AAACY,IAAAA,GAAG,EAAE;AAACO,MAAAA,IAAI,EAAE3B,CAAC,CAACiB,OAAD,CAAD,CAAWK,IAAX,CAAgB,SAAhB,CAAP;AACCM,MAAAA,MAAM,EAAE5B,CAAC,CAACiB,OAAD,CAAD,CAAWK,IAAX,CAAgB,WAAhB;AADT,KAAN;AAEEE,IAAAA,UAAU,EAAEf,QAFd;AAGEgB,IAAAA,gBAAgB,EAAE,CAACjB,QAAD,EAAW,IAAX;AAHpB,GAA9B;AAIH;AAED,OAAO,SAASqB,mBAAT,CAA6BZ,OAA7B,EAAsCa,QAAtC,EAAgDC,KAAK,GAAC,SAAtD,EAAiEC,WAAW,GAAC;AAACC,EAAAA,CAAC,EAAE,KAAJ;AAAWC,EAAAA,CAAC,EAAE;AAAd,CAA7E,EAAmG;AACtGjC,EAAAA,IAAI,CAACkC,GAAL,CAASlB,OAAT,EAAkB;AACda,IAAAA,QAAQ,EAAEA,QADI;AAEdM,IAAAA,eAAe,EAAEL,KAFH;AAGdE,IAAAA,CAAC,EAAED,WAAW,CAACC,CAHD;AAIdC,IAAAA,CAAC,EAAEF,WAAW,CAACE;AAJD,GAAlB;AAMH","sourcesContent":["import $ from 'jquery';\nimport gsap from 'gsap';\nimport { TimelineLite, CSSPlugin } from 'gsap/all';\nconst plugins = [ CSSPlugin ]; \n\ngsap.registerPlugin(plugins);\n\nexport function dissolveFlashIn (SVGGroup, duration, onFinish) {\n    console.log(\"Dissolving in...\");\n    let appearTL = new TimelineLite({ paused:true, yoyo:true, repeat:-1 })\n    SVGGroup.forEach(element => {\n        appearTL.add(gsap.to($(element), duration, {css: {opacity: $(element).data('og_opacity')},\n                                        delay: 2,\n                                        onComplete: onFinish,\n                                        onCompleteParams: [element, 0.5, null]}), 0);\n    })\n\n    return appearTL;\n}\n\nexport function dissolveFadeFromWhite(element, duration, onFinish) {\n    console.log(\"Fadeing from white...\");\n    gsap.to($(element), duration, {css: {fill: $(element).data('og_fill'),\n                                         stroke: $(element).data('og_stroke')},\n                                    onComplete: onFinish,\n                                    onCompleteParams: [duration, null]});\n}\n\nexport function setElementTransform(element, rotation, pivot=\"50% 50%\", translation={x: \"+=0\", y: \"+=0\"}) {\n    gsap.set(element, {\n        rotation: rotation,\n        transformOrigin: pivot,\n        x: translation.x,\n        y: translation.y\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}