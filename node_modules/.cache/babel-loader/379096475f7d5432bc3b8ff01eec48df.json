{"ast":null,"code":"import $ from 'jquery';\nimport gsap from 'gsap';\nimport { TimelineLite, CSSPlugin } from 'gsap/all';\nconst plugins = [CSSPlugin];\ngsap.registerPlugin(plugins);\nexport function dissolveFlashIn(SVGGroup, duration, timestamp = 0) {\n  console.log(\"Dissolving in...\");\n  let appearTL = new TimelineLite();\n  SVGGroup.forEach(element => {\n    appearTL.add(gsap.to($(element), duration, {\n      css: {\n        opacity: $(element).data('og_opacity')\n      }\n    }), timestamp);\n  });\n  return appearTL;\n}\nexport function dissolveFadeFromWhite(SVGGroup, duration, timestamp = 0) {\n  console.log(\"Fadeing from white...\");\n  let fadeTL = new TimelineLite();\n  SVGGroup.forEach(element => {\n    fadeTL.add(gsap.to($(element), duration, {\n      css: {\n        fill: $(element).data('og_fill'),\n        stroke: $(element).data('og_stroke')\n      }\n    }), timestamp);\n  });\n  return fadeTL;\n}\nexport function transformComponent(SVGObj, duration, rotation, pivot = \"50% 50%\", translation = {\n  x: \"+=0\",\n  y: \"+= 0\"\n}, timestamp = 0, bounce = true) {\n  console.log(\"Moving body part...\");\n  let transformTL = new TimelineLite();\n  transformTL.add(gsap.to(SVGObj, duration, {\n    rotation: rotation,\n    transformOrigin: pivot,\n    x: translation.x,\n    y: translation.y,\n    bounce: Bounce.easeInOut\n  }), timestamp);\n}\nexport function setElementTransform(element, rotation, pivot = \"50% 50%\", translation = {\n  x: \"+=0\",\n  y: \"+=0\"\n}) {\n  gsap.set(element, {\n    rotation: rotation,\n    transformOrigin: pivot,\n    x: translation.x,\n    y: translation.y\n  });\n}","map":{"version":3,"sources":["/Users/phipson/Documents/GitProjects/phipson.github.io/webv5/src/SVGAnimatorUtility.js"],"names":["$","gsap","TimelineLite","CSSPlugin","plugins","registerPlugin","dissolveFlashIn","SVGGroup","duration","timestamp","console","log","appearTL","forEach","element","add","to","css","opacity","data","dissolveFadeFromWhite","fadeTL","fill","stroke","transformComponent","SVGObj","rotation","pivot","translation","x","y","bounce","transformTL","transformOrigin","Bounce","easeInOut","setElementTransform","set"],"mappings":"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","sourcesContent":["import $ from 'jquery';\nimport gsap from 'gsap';\nimport { TimelineLite, CSSPlugin } from 'gsap/all';\nconst plugins = [ CSSPlugin ]; \n\ngsap.registerPlugin(plugins);\n\nexport function dissolveFlashIn (SVGGroup, duration, timestamp=0) {\n    console.log(\"Dissolving in...\");\n    let appearTL = new TimelineLite();\n    SVGGroup.forEach(element => {\n        appearTL.add(gsap.to($(element), duration, {css: {opacity: $(element).data('og_opacity')}}), timestamp);\n    })\n\n    return appearTL;\n}\n\nexport function dissolveFadeFromWhite(SVGGroup, duration, timestamp=0) {\n    console.log(\"Fadeing from white...\");\n    let fadeTL = new TimelineLite();\n    SVGGroup.forEach(element => {\n        fadeTL.add(gsap.to($(element), duration, {css: {fill: $(element).data('og_fill'),\n                                                        stroke: $(element).data('og_stroke')}}), timestamp);\n    })\n\n    return fadeTL;\n}\n\nexport function transformComponent(SVGObj, duration, rotation, pivot=\"50% 50%\", translation={x: \"+=0\", y: \"+= 0\"}, timestamp=0, bounce=true) {\n    console.log(\"Moving body part...\");\n    let transformTL = new TimelineLite();\n    transformTL.add(gsap.to(SVGObj, duration, {rotation: rotation,\n                                                transformOrigin: pivot,\n                                                x: translation.x,\n                                                y: translation.y,\n                                                bounce: Bounce.easeInOut}), timestamp);\n}\n\nexport function setElementTransform(element, rotation, pivot=\"50% 50%\", translation={x: \"+=0\", y: \"+=0\"}) {\n    gsap.set(element, {\n        rotation: rotation,\n        transformOrigin: pivot,\n        x: translation.x,\n        y: translation.y\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}