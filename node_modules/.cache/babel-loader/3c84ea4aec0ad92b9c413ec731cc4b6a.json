{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/phipson/Documents/GitProjects/phipson.github.io/webv5/src/components/ProjectCatalogue.js\";\nimport { HashRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport '../style.css';\nimport $ from 'jquery';\nimport ProjectPreviewElement from './ProjectPreviewElement';\nimport SideCarousel from './SideCarousel'; // Holds all the projects that will be displayed based on the pageID that we are currently at\n\nexport default class ProjectCatalogue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scrollTopPosition: 0 // Keep track of where we are in the screen so we can return to it if we hit back\n\n    };\n  }\n\n  componentDidMount() {// TODO: For each ProjectPreviewElement, we add a new TweenMax with a ScrollTrigger to fade in each element separartely\n    // TODO: On scrollTrigger, we also pass the updated element to the sideCarousel element (to update the element feedback)\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SideCarousel, {\n        projectList: this.props.projectList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), Object.values(this.props.projectList).map((proj, i) => /*#__PURE__*/_jsxDEV(ProjectPreviewElement, {\n        name: proj.name,\n        desc: proj.desc,\n        svg: proj.svg,\n        page: proj.page,\n        viewDetails: this.props.viewDetails\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 69\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/phipson/Documents/GitProjects/phipson.github.io/webv5/src/components/ProjectCatalogue.js"],"names":["HashRouter","React","Component","$","ProjectPreviewElement","SideCarousel","ProjectCatalogue","constructor","props","state","scrollTopPosition","componentDidMount","render","projectList","Object","values","map","proj","i","name","desc","svg","page","viewDetails"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,cAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAGA;;AACA,eAAe,MAAMC,gBAAN,SAA+BJ,SAA/B,CAAyC;AACpDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,iBAAiB,EAAE,CADV,CACY;;AADZ,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG,CAChB;AACA;AAEH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA,8BACI,QAAC,YAAD;AAAc,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKC,MAAM,CAACC,MAAP,CAAc,KAAKP,KAAL,CAAWK,WAAzB,EAAsCG,GAAtC,CAA0C,CAACC,IAAD,EAAOC,CAAP,kBAAa,QAAC,qBAAD;AAEhB,QAAA,IAAI,EAAED,IAAI,CAACE,IAFK;AAGhB,QAAA,IAAI,EAAEF,IAAI,CAACG,IAHK;AAIhB,QAAA,GAAG,EAAEH,IAAI,CAACI,GAJM;AAKhB,QAAA,IAAI,EAAEJ,IAAI,CAACK,IALK;AAMhB,QAAA,WAAW,EAAE,KAAKd,KAAL,CAAWe;AANR,SACXL,CADW;AAAA;AAAA;AAAA;AAAA,cAAvD,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAWH;;AA1BmD","sourcesContent":["import { HashRouter } from 'react-router-dom';\nimport React, {Component} from 'react';\nimport '../style.css';\nimport $ from 'jquery';\n\nimport ProjectPreviewElement from './ProjectPreviewElement';\nimport SideCarousel from './SideCarousel';\n\n\n// Holds all the projects that will be displayed based on the pageID that we are currently at\nexport default class ProjectCatalogue extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scrollTopPosition: 0 // Keep track of where we are in the screen so we can return to it if we hit back\n        }\n    }\n\n    componentDidMount() {\n        // TODO: For each ProjectPreviewElement, we add a new TweenMax with a ScrollTrigger to fade in each element separartely\n        // TODO: On scrollTrigger, we also pass the updated element to the sideCarousel element (to update the element feedback)\n        \n    }\n\n    render() {\n        return(\n        <div>\n            <SideCarousel projectList={this.props.projectList}/>\n            {Object.values(this.props.projectList).map((proj, i) => <ProjectPreviewElement \n                                                    key={i}\n                                                    name={proj.name} \n                                                    desc={proj.desc} \n                                                    svg={proj.svg} \n                                                    page={proj.page}\n                                                    viewDetails={this.props.viewDetails}/>)}\n        </div>)\n    }\n}"]},"metadata":{},"sourceType":"module"}