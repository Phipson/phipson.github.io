{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/phipson/Documents/GitProjects/phipson.github.io/webv5/src/App.js\";\nimport './style.css';\nimport { HashRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport LandingPage from './components/Landing';\nimport NavigationBar from './components/NavigationBar';\nimport ProjectCatalogue from './components/ProjectCatalogue';\nimport XRProjectList from './components/XRProjectList';\nimport UXProjectList from './components/UXProjectList';\nimport SWProjectList from './components/SWProjectList';\nconst ProjectCatalogueList = [XRProjectList, UXProjectList, SWProjectList]; // TODO: Based on PageID fetch the corresponding projects\n\nconst NavHeader = [\"Mixed Reality\", \"HCI Research\", \"Software Development\"];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transitionComplete: false,\n      pageID: 0,\n      // FOR LANDING PAGE (By default, black for nothing)\n      siteState: 0,\n      // FOR NAVIGATION\n      headerText: \"\",\n      // FOR NAVIGATION DISPLAY (SYSTEM STATUS)\n      displayPage: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this) // BASED ON CLICKED PROJECT CATALOGUE PAGE\n\n    };\n    this.setSiteState = this.setSiteState.bind(this);\n    this.changePageIDState = this.changePageIDState.bind(this);\n    this.viewDetails = this.viewDetails.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n  }\n\n  handleColorChange() {\n    this.setState(() => ({\n      transitionComplete: true\n    }));\n  }\n\n  setSiteState(newState) {\n    let oldState = this.state.siteState;\n    this.setState(() => ({\n      siteState: newState\n    }), () => {\n      if (oldState === 2) {\n        this.setState(() => ({\n          displayPage: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 24\n          }, this)\n        }));\n      }\n\n      if (newState === 1) {\n        this.setState(() => ({\n          headerText: NavHeader[this.state.pageID]\n        }), () => {\n          this.navChild.changeLogoButton(\"← Return Home\", () => {\n            this.setSiteState(0);\n          });\n          this.navChild.changeTitleText(this.state.headerText);\n        });\n      } else if (newState === 0) {\n        this.setState(() => ({\n          headerText: \"\"\n        }), () => {\n          this.navChild.changeLogoButton(\"Phipson\", () => {\n            this.setSiteState(0);\n          });\n          this.navChild.changeTitleText(this.state.headerText);\n        });\n      }\n    });\n  }\n\n  changePageIDState(newPageID) {\n    if (newPageID < 0) newPageID = 2;else if (newPageID > 2) newPageID = 0;\n    console.log(\"Changing pageID to: \", newPageID);\n    this.setState(() => ({\n      pageID: newPageID % 3\n    }), () => {\n      if (this.state.siteState === 0) {\n        this.child.child.swapTimeline(this.state.pageID);\n      }\n    });\n  }\n\n  viewDetails(displayPage) {\n    console.log(\"Displaying page: \", displayPage);\n    this.setState(() => ({\n      displayPage: displayPage.page,\n      headerText: displayPage.name\n    }), () => {\n      this.navChild.changeLogoButton(\"← Return to Projects\", () => {\n        this.setSiteState(1);\n      });\n      this.navChild.changeTitleText(this.state.headerText);\n      this.setSiteState(2);\n    });\n  }\n\n  render() {\n    let siteMap = {\n      0: /*#__PURE__*/_jsxDEV(LandingPage, {\n        pageID: this.state.pageID,\n        onChange: this.changePageIDState,\n        onRef: ref => this.child = ref,\n        onViewProject: () => {\n          this.setSiteState(1);\n        },\n        transitionComplete: this.state.transitionComplete,\n        onInit: this.handleColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }, this),\n      1: /*#__PURE__*/_jsxDEV(ProjectCatalogue, {\n        viewDetails: this.viewDetails,\n        projectList: ProjectCatalogueList[this.state.pageID],\n        pageID: this.state.pageID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 10\n      }, this),\n      2: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProjDet-TitleWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ProjectElementText\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"ProjectWhiteText\",\n              children: this.state.headerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ProjectSubtitle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ProjectButtonText\",\n              style: {\n                cursor: \"unset\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ProjectElementSVG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ProjDet-p ProjectWhiteText ScrollArrowDown\",\n            children: \"\\u2193\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), this.state.displayPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 10\n      }, this)\n    };\n    return /*#__PURE__*/_jsxDEV(HashRouter, {\n      basename: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n          title: this.state.headerText,\n          onChange: () => {\n            this.setSiteState(0);\n          },\n          onRef: ref => {\n            this.navChild = ref;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), siteMap[this.state.siteState]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/phipson/Documents/GitProjects/phipson.github.io/webv5/src/App.js"],"names":["HashRouter","React","Component","LandingPage","NavigationBar","ProjectCatalogue","XRProjectList","UXProjectList","SWProjectList","ProjectCatalogueList","NavHeader","App","constructor","props","state","transitionComplete","pageID","siteState","headerText","displayPage","setSiteState","bind","changePageIDState","viewDetails","handleColorChange","setState","newState","oldState","navChild","changeLogoButton","changeTitleText","newPageID","console","log","child","swapTimeline","page","name","render","siteMap","ref","cursor"],"mappings":";;AAAA,OAAO,aAAP;AACA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAGA,MAAMC,oBAAoB,GAAG,CAACH,aAAD,EAAgBC,aAAhB,EAA+BC,aAA/B,CAA7B,C,CAA4E;;AAC5E,MAAME,SAAS,GAAG,CAAC,eAAD,EAAkB,cAAlB,EAAkC,sBAAlC,CAAlB;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA2B;AACzBU,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE,KADT;AAEXC,MAAAA,MAAM,EAAE,CAFG;AAEA;AACXC,MAAAA,SAAS,EAAE,CAHA;AAGG;AACdC,MAAAA,UAAU,EAAE,EAJD;AAIM;AACjBC,MAAAA,WAAW,eAAE;AAAA;AAAA;AAAA;AAAA,cALF,CAKe;;AALf,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc,OAAO;AACnBV,MAAAA,kBAAkB,EAAE;AADD,KAAP,CAAd;AAGD;;AAEDK,EAAAA,YAAY,CAACM,QAAD,EAAW;AACrB,QAAIC,QAAQ,GAAG,KAAKb,KAAL,CAAWG,SAA1B;AACA,SAAKQ,QAAL,CAAc,OAAO;AACnBR,MAAAA,SAAS,EAAES;AADQ,KAAP,CAAd,EAEI,MAAM;AACR,UAAIC,QAAQ,KAAK,CAAjB,EAAoB;AAClB,aAAKF,QAAL,CAAc,OAAO;AACnBN,UAAAA,WAAW,eAAE;AAAA;AAAA;AAAA;AAAA;AADM,SAAP,CAAd;AAGD;;AAED,UAAIO,QAAQ,KAAK,CAAjB,EAAoB;AAClB,aAAKD,QAAL,CAAc,OAAO;AACnBP,UAAAA,UAAU,EAAER,SAAS,CAAC,KAAKI,KAAL,CAAWE,MAAZ;AADF,SAAP,CAAd,EAEI,MAAM;AACR,eAAKY,QAAL,CAAcC,gBAAd,CAA+B,eAA/B,EAAgD,MAAM;AAAC,iBAAKT,YAAL,CAAkB,CAAlB;AAAqB,WAA5E;AACA,eAAKQ,QAAL,CAAcE,eAAd,CAA8B,KAAKhB,KAAL,CAAWI,UAAzC;AACD,SALD;AAMD,OAPD,MAQK,IAAIQ,QAAQ,KAAK,CAAjB,EAAoB;AACvB,aAAKD,QAAL,CAAc,OAAO;AACnBP,UAAAA,UAAU,EAAE;AADO,SAAP,CAAd,EAEI,MAAM;AACR,eAAKU,QAAL,CAAcC,gBAAd,CAA+B,SAA/B,EAA0C,MAAM;AAAC,iBAAKT,YAAL,CAAkB,CAAlB;AAAqB,WAAtE;AACA,eAAKQ,QAAL,CAAcE,eAAd,CAA8B,KAAKhB,KAAL,CAAWI,UAAzC;AACD,SALD;AAMD;AACF,KAzBD;AA0BD;;AAEDI,EAAAA,iBAAiB,CAACS,SAAD,EAAY;AAC3B,QAAIA,SAAS,GAAG,CAAhB,EACEA,SAAS,GAAG,CAAZ,CADF,KAEK,IAAIA,SAAS,GAAG,CAAhB,EACHA,SAAS,GAAG,CAAZ;AAEFC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,SAApC;AACA,SAAKN,QAAL,CAAc,OAAO;AACnBT,MAAAA,MAAM,EAAEe,SAAS,GAAC;AADC,KAAP,CAAd,EAEI,MAAM;AACR,UAAI,KAAKjB,KAAL,CAAWG,SAAX,KAAyB,CAA7B,EAAgC;AAC9B,aAAKiB,KAAL,CAAWA,KAAX,CAAiBC,YAAjB,CAA8B,KAAKrB,KAAL,CAAWE,MAAzC;AACD;AACF,KAND;AAOD;;AAEDO,EAAAA,WAAW,CAACJ,WAAD,EAAc;AACvBa,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCd,WAAjC;AACA,SAAKM,QAAL,CAAc,OAAO;AACnBN,MAAAA,WAAW,EAAEA,WAAW,CAACiB,IADN;AAEnBlB,MAAAA,UAAU,EAAEC,WAAW,CAACkB;AAFL,KAAP,CAAd,EAGI,MAAM;AACR,WAAKT,QAAL,CAAcC,gBAAd,CAA+B,sBAA/B,EAAuD,MAAM;AAAC,aAAKT,YAAL,CAAkB,CAAlB;AAAqB,OAAnF;AACA,WAAKQ,QAAL,CAAcE,eAAd,CAA8B,KAAKhB,KAAL,CAAWI,UAAzC;AACA,WAAKE,YAAL,CAAkB,CAAlB;AACD,KAPD;AAQD;;AAEDkB,EAAAA,MAAM,GAAI;AACR,QAAIC,OAAO,GAAG;AACZ,sBAAG,QAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKzB,KAAL,CAAWE,MAAhC;AACa,QAAA,QAAQ,EAAE,KAAKM,iBAD5B;AAEa,QAAA,KAAK,EAAEkB,GAAG,IAAK,KAAKN,KAAL,GAAaM,GAFzC;AAGa,QAAA,aAAa,EAAE,MAAM;AAAC,eAAKpB,YAAL,CAAkB,CAAlB;AAAqB,SAHxD;AAIa,QAAA,kBAAkB,EAAE,KAAKN,KAAL,CAAWC,kBAJ5C;AAKa,QAAA,MAAM,EAAE,KAAKS;AAL1B;AAAA;AAAA;AAAA;AAAA,cADS;AAOZ,sBAAG,QAAC,gBAAD;AAAmB,QAAA,WAAW,EAAE,KAAKD,WAArC;AACmB,QAAA,WAAW,EAAEd,oBAAoB,CAAC,KAAKK,KAAL,CAAWE,MAAZ,CADpD;AAEmB,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE;AAFtC;AAAA;AAAA;AAAA;AAAA,cAPS;AAUZ,sBAAG;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,kBAAd;AAAA,wBAAkC,KAAKF,KAAL,CAAWI;AAA7C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,SAAS,EAAC,mBAAlB;AAAsC,cAAA,KAAK,EAAE;AAACuB,gBAAAA,MAAM,EAAE;AAAT;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBANJ,eAQI;AAAG,YAAA,SAAS,EAAC,4CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAWE,KAAK3B,KAAL,CAAWK,WAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAVS,KAAd;AAyBA,wBACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAC,GAArB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,QAAC,aAAD;AAAgB,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWI,UAAlC;AACgB,UAAA,QAAQ,EAAE,MAAM;AAAC,iBAAKE,YAAL,CAAkB,CAAlB;AAAqB,WADtD;AAEgB,UAAA,KAAK,EAAGoB,GAAD,IAAS;AAAC,iBAAKZ,QAAL,GAAgBY,GAAhB;AAAoB;AAFrD;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGD,OAAO,CAAC,KAAKzB,KAAL,CAAWG,SAAZ,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AArHwB;;AAwH3B,eAAeN,GAAf","sourcesContent":["import './style.css';\nimport { HashRouter } from 'react-router-dom';\nimport React, {Component} from 'react';\n\nimport LandingPage from './components/Landing';\nimport NavigationBar from './components/NavigationBar';\nimport ProjectCatalogue from './components/ProjectCatalogue';\n\nimport XRProjectList from './components/XRProjectList';\nimport UXProjectList from './components/UXProjectList';\nimport SWProjectList from './components/SWProjectList';\n\n\nconst ProjectCatalogueList = [XRProjectList, UXProjectList, SWProjectList]; // TODO: Based on PageID fetch the corresponding projects\nconst NavHeader = [\"Mixed Reality\", \"HCI Research\", \"Software Development\"];\n\nclass App extends Component{\n  constructor (props) {\n    super(props);\n    this.state = {\n      transitionComplete: false,\n      pageID: 0, // FOR LANDING PAGE (By default, black for nothing)\n      siteState: 0, // FOR NAVIGATION\n      headerText: \"\",  // FOR NAVIGATION DISPLAY (SYSTEM STATUS)\n      displayPage: <div></div>, // BASED ON CLICKED PROJECT CATALOGUE PAGE\n    }\n\n    this.setSiteState = this.setSiteState.bind(this);\n    this.changePageIDState = this.changePageIDState.bind(this);\n    this.viewDetails = this.viewDetails.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n  }\n\n  handleColorChange() {\n    this.setState(() => ({\n      transitionComplete: true,\n    }))\n  }\n\n  setSiteState(newState) {\n    let oldState = this.state.siteState;\n    this.setState(() => ({\n      siteState: newState,\n    }), () => {\n      if (oldState === 2) {\n        this.setState(() => ({\n          displayPage: <div></div>\n        }))\n      }\n      \n      if (newState === 1) {\n        this.setState(() => ({\n          headerText: NavHeader[this.state.pageID]\n        }), () => {\n          this.navChild.changeLogoButton(\"← Return Home\", () => {this.setSiteState(0)})\n          this.navChild.changeTitleText(this.state.headerText);\n        })\n      }\n      else if (newState === 0) {\n        this.setState(() => ({\n          headerText: \"\"\n        }), () => {\n          this.navChild.changeLogoButton(\"Phipson\", () => {this.setSiteState(0)})\n          this.navChild.changeTitleText(this.state.headerText);\n        });\n      }\n    });\n  }\n\n  changePageIDState(newPageID) {\n    if (newPageID < 0)\n      newPageID = 2;\n    else if (newPageID > 2)\n      newPageID = 0;\n\n    console.log(\"Changing pageID to: \", newPageID);\n    this.setState(() => ({\n      pageID: newPageID%3\n    }), () => {\n      if (this.state.siteState === 0) {\n        this.child.child.swapTimeline(this.state.pageID);\n      }\n    });\n  }\n\n  viewDetails(displayPage) {\n    console.log(\"Displaying page: \", displayPage);\n    this.setState(() => ({\n      displayPage: displayPage.page,\n      headerText: displayPage.name\n    }), () => {\n      this.navChild.changeLogoButton(\"← Return to Projects\", () => {this.setSiteState(1)})\n      this.navChild.changeTitleText(this.state.headerText);\n      this.setSiteState(2)\n    });\n  }\n\n  render () {\n    let siteMap = {\n      0: <LandingPage pageID={this.state.pageID} \n                      onChange={this.changePageIDState} \n                      onRef={ref => (this.child = ref)}\n                      onViewProject={() => {this.setSiteState(1)}}\n                      transitionComplete={this.state.transitionComplete}\n                      onInit={this.handleColorChange}/>,\n      1: <ProjectCatalogue  viewDetails={this.viewDetails} \n                            projectList={ProjectCatalogueList[this.state.pageID]}\n                            pageID={this.state.pageID}/>,\n      2: <div>\n          <div className=\"ProjDet-TitleWrapper\">\n              <div className=\"ProjectElementText\">\n                  <h2 className=\"ProjectWhiteText\">{this.state.headerText}</h2>\n                  <p className=\"ProjectSubtitle\"/>\n                  <button className=\"ProjectButtonText\" style={{cursor: \"unset\"}}/>\n              </div>\n              <div className=\"ProjectElementSVG\">\n              </div>\n              <p className=\"ProjDet-p ProjectWhiteText ScrollArrowDown\">&#8595;</p>\n          </div>\n          {this.state.displayPage}\n        </div>\n    };\n\n    return (\n      <HashRouter basename='/'>\n        <div className=\"App\">\n          <NavigationBar  title={this.state.headerText} \n                          onChange={() => {this.setSiteState(0)}}\n                          onRef={(ref) => {this.navChild = ref}}/>\n          {siteMap[this.state.siteState]}\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}