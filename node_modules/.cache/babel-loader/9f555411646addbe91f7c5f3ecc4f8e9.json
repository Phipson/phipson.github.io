{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/phipson/Documents/GitProjects/phipson.github.io/webv5/src/components/ProjectPreviewElement.js\";\nimport { HashRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport '../style.css';\nimport $ from 'jquery';\nimport gsap from \"gsap\";\nimport { TweenMax, ScrollToPlugin } from 'gsap/all';\nimport { Link } from 'react-router-dom';\nconst LinkNames = [\"mixed_reality\", \"ux_design\", \"software_development\"];\ngsap.registerPlugin(ScrollToPlugin); // Holds a component for a project that will be clicked on to show the actual project page\n\nexport default class ProjectPreviewElement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name,\n      desc: this.props.desc,\n      page: this.props.page,\n      img: this.props.img,\n      link: this.props.link\n    };\n    this.handleScrollLocation = this.handleScrollLocation.bind(this);\n  } // This is called by the SideCarousel element to set the specific scroll position we want to navigate to on the page, \n  // corresponding to the project that we want to view\n  // while this is playing, we prevent any scroll trigger animations with the side carousel\n\n\n  handleScrollLocation(index) {\n    console.log(\"Scrolling and switching pages: \", index);\n    this.setState(() => ({\n      scrollTop: window.innerHeight * index,\n      activeElement: index\n    }), () => {\n      TweenMax.to($(window), {\n        scrollTo: {\n          y: window.innerHeight * index\n        },\n        duration: 0.5,\n        ease: \"Power2.easeInOut\"\n      });\n      TweenMax.to($(\".ProjectSubtitle,.ProjectButtonText,.ProjectElementSVG\"), {\n        css: {\n          opacity: 0\n        },\n        duration: 0.5,\n        onComplete: () => {\n          TweenMax.set($(\".ProjectSubtitle,.ProjectButtonText,.ProjectElementSVG\"), {\n            css: {\n              display: \"none\"\n            }\n          });\n          this.props.viewDetails(this.state);\n        }\n      });\n    });\n  } // Add fade in fade out that are triggered by mouse hover for each element when the page is mounted onto the screen\n  // The elements are fetched by class name using JQuery and are animated with GSAP\n\n\n  componentDidMount() {\n    $(\".ProjectButtonText\").on(\"mouseenter\", function () {\n      TweenMax.to($(\".ProjectButtonText\"), {\n        css: {\n          opacity: 1\n        },\n        duration: 0.25\n      });\n    });\n    $(\".ProjectButtonText\").on(\"mouseleave\", function () {\n      TweenMax.to($(\".ProjectButtonText\"), {\n        css: {\n          opacity: 0.5\n        },\n        duration: 0.25\n      });\n    });\n  }\n\n  render() {\n    // The color of the text changes based on the pageID from App.js\n    let subtitleClass = \"ProjectSubtitleXR\";\n\n    switch (this.props.pageID) {\n      case 1:\n        subtitleClass = \"ProjectSubtitleUX\";\n        break;\n\n      case 2:\n        subtitleClass = \"ProjectSubtitleSWE\";\n        break;\n\n      default:\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProjectElementWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProjectElementText\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"ProjectWhiteText\",\n          children: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: subtitleClass + \" ProjectSubtitle\",\n          children: this.state.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${LinkNames[this.props.pageID]}/${this.state.link}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: subtitleClass + \" ProjectButtonText\",\n            onClick: () => {\n              this.handleScrollLocation(this.props.index);\n            },\n            children: \"View Project \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProjectElementSVG\",\n        children: this.state.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/phipson/Documents/GitProjects/phipson.github.io/webv5/src/components/ProjectPreviewElement.js"],"names":["HashRouter","React","Component","$","gsap","TweenMax","ScrollToPlugin","Link","LinkNames","registerPlugin","ProjectPreviewElement","constructor","props","state","name","desc","page","img","link","handleScrollLocation","bind","index","console","log","setState","scrollTop","window","innerHeight","activeElement","to","scrollTo","y","duration","ease","css","opacity","onComplete","set","display","viewDetails","componentDidMount","on","render","subtitleClass","pageID"],"mappings":"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","sourcesContent":["import { HashRouter } from 'react-router-dom';\nimport React, {Component} from 'react';\nimport '../style.css';\nimport $ from 'jquery';\nimport gsap from \"gsap\";\nimport { TweenMax, ScrollToPlugin } from 'gsap/all';\nimport {Link} from 'react-router-dom';\n\nconst LinkNames = [\"mixed_reality\", \"ux_design\", \"software_development\"]\n\ngsap.registerPlugin(ScrollToPlugin);\n\n// Holds a component for a project that will be clicked on to show the actual project page\nexport default class ProjectPreviewElement extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            name: this.props.name,\n            desc: this.props.desc,\n            page: this.props.page,\n            img: this.props.img,\n            link: this.props.link\n        }\n\n        this.handleScrollLocation = this.handleScrollLocation.bind(this);\n    }\n\n    // This is called by the SideCarousel element to set the specific scroll position we want to navigate to on the page, \n    // corresponding to the project that we want to view\n    // while this is playing, we prevent any scroll trigger animations with the side carousel\n    handleScrollLocation(index) {\n        console.log(\"Scrolling and switching pages: \", index);\n        this.setState(() => ({\n            scrollTop: window.innerHeight*index,\n            activeElement: index\n        }), () => {\n            TweenMax.to($(window), {scrollTo: {y: window.innerHeight*index}, duration: 0.5, ease: \"Power2.easeInOut\"});\n            TweenMax.to($(\".ProjectSubtitle,.ProjectButtonText,.ProjectElementSVG\"), {css: {opacity: 0}, duration: 0.5,\n            onComplete: () => {\n                TweenMax.set($(\".ProjectSubtitle,.ProjectButtonText,.ProjectElementSVG\"), {css: {display: \"none\"}})\n                this.props.viewDetails(this.state)\n            }})\n        });\n    }\n\n    // Add fade in fade out that are triggered by mouse hover for each element when the page is mounted onto the screen\n    // The elements are fetched by class name using JQuery and are animated with GSAP\n    componentDidMount() {\n        $(\".ProjectButtonText\").on(\"mouseenter\", function() {\n            TweenMax.to($(\".ProjectButtonText\"), {css: {opacity: 1}, duration: 0.25})\n        })\n\n        $(\".ProjectButtonText\").on(\"mouseleave\", function() {\n            TweenMax.to($(\".ProjectButtonText\"), {css: {opacity: 0.5}, duration: 0.25})\n        })\n    }\n\n    render() {\n        // The color of the text changes based on the pageID from App.js\n        let subtitleClass = \"ProjectSubtitleXR\";\n        switch (this.props.pageID) {\n            case 1:\n                subtitleClass = \"ProjectSubtitleUX\";\n                break;\n\n            case 2:\n                subtitleClass = \"ProjectSubtitleSWE\";\n                break;\n\n            default:\n                break;\n        }\n\n        return(<div className=\"ProjectElementWrapper\">\n                <div className=\"ProjectElementText\">\n                    <h2 className=\"ProjectWhiteText\">{this.state.name}</h2>\n                    <p className={subtitleClass + \" ProjectSubtitle\"}>{this.state.desc}</p>\n                    <Link to={`/${LinkNames[this.props.pageID]}/${this.state.link}`}>\n                    <button className={subtitleClass + \" ProjectButtonText\"} \n                            onClick={() => {this.handleScrollLocation(this.props.index)}}>\n                                View Project &#8594;\n                    </button>\n                    </Link>\n                </div>\n                <div className=\"ProjectElementSVG\">\n                    {this.state.img}\n                </div>\n            </div>);\n    }\n}"]},"metadata":{},"sourceType":"module"}